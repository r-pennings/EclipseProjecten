import java.util.*;

import Field;
import Ship;
import Square;

public class Helper {

	private static Random rand = new Random();

	public static boolean isValidAmountOfPlayers(String input) {
		return (input.equals("1") || input.equals("2"));
	}

	public static boolean isValidName(String name) {
		return (!name.isEmpty() && name.matches("^[a-zA-Z ]*$"));
	}

	public static boolean isValidChar(char inputChar) {
		return (inputChar >= 'A' && inputChar <= 'J');
	}

	public static boolean isValidNr(String inputNr) {
		try {
			int input = Integer.parseInt(inputNr);
			return (input >= 1 && input <= Field.BOARD_SIZE);
		} catch (NumberFormatException | NullPointerException nfe) {
			return false;
		}
	}

	public static boolean isValidInput(String input) {
		return (Character.isLetter(input.charAt(0)) && Character.isDigit(input.charAt(1))
				&& isPosInField(input.charAt(0)) && isPosInField(input.charAt(0)));
	}

	public static String getPosition(char positionChar, int positionNr) {
		return (positionChar + "" + positionNr);
	}

	public static boolean isPosInField(char pos) {
		return (pos >= 'A' && pos <= 'J');
	}

	public static boolean isPosInField(int pos) {
		return (pos >= 1 && pos <= 10);
	}

	public static char getRandomChar(Ship ship) {
		return Field.BOARD_LETTERS[rand.nextInt(Field.BOARD_LETTERS.length - ship.getLength())];
	}

	public static int getRandomNr(Ship ship) {
		return rand.nextInt(Field.BOARD_SIZE - ship.getLength()) + 1;
	}

	public static boolean isSquareFree(HashMap<String, Square> playfield, String pos) {
		return playfield.get(pos).getShip() == null;
	}
}
